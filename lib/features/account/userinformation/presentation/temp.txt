import 'package:ar_zoo_explorers/features/account/userinformation/presentation/userinformation_cubit.dart';
import 'package:ar_zoo_explorers/features/account/userinformation/presentation/userinformation_state.dart';
import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_form_builder/flutter_form_builder.dart';
import 'package:form_builder_validators/form_builder_validators.dart';
import 'package:get/get_state_manager/src/rx_flutter/rx_obx_widget.dart';

import '../../../../app/config/routes.dart';
import '../../../../app/theme/icons.dart';
import '../../../../base/base_state.dart';
import '../../../../base/widgets/page_loading_indicator.dart';
import '../../../../core/data/controller/auth_controller.dart';
import '../../../../utils/widget/button_widget.dart';
import '../../../base-model/FormBuilderTextField_Model.dart';

@RoutePage()
class UserInformationPage extends StatefulWidget {
  const UserInformationPage({super.key});

  @override
  State createState() => _State();
}

class _State extends BaseState<UserInformationState, UserInformationCubit,
    UserInformationPage> {
  final controller = AuthController.findOrInitialize;
  final _formKey = GlobalKey<FormBuilderState>();
  // final TextEditingController dateController = TextEditingController();
  // List<String> listGender = ['Nam', 'Nữ'];
  // final FixedExtentScrollController scrollController =
  //     FixedExtentScrollController(initialItem: 1);
  // String txtGender = "Nam";
  // DateTime dtBirthday = DateTime.now();

  @override
  Widget buildByState(BuildContext context, UserInformationState state) {
    return Obx(() => GestureDetector(
        onTap: () => FocusScope.of(context).requestFocus(FocusNode()),
        child: PageLoadingIndicator(
            future: controller.checkAuthState(context),
            scaffold: Scaffold(
                appBar: AppBar(
                    centerTitle: true,
                    title: const Text('CHỈNH SỬA THÔNG TIN',
                        style: TextStyle(fontSize: 18, color: Colors.white)),
                    actions: const [],
                    leading: TurnBack()),
                body: FormBuilder(
                    key: _formKey,
                    child: SingleChildScrollView(
                        child: Column(children: [
                      ProfileHeader(),
                      EmailForm(FormBuilderTextFieldModel(
                          name: 'email',
                          hint_text: "user123@gmail.com",
                          icon_prefix: AppIcons.icUser,
                          isObscured: false)),
                    ])))))));
  }

  Widget EmailForm(FormBuilderTextFieldModel items) {
    return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
      const Row(children: [
        SizedBox(width: 15),
        Text("Nhập địa chỉ email tại đây",
            style: TextStyle(
                fontSize: 16,
                color: Colors.black,
                fontStyle: FontStyle.italic,
                fontWeight: FontWeight.bold))
      ]),
      const SizedBox(height: 10),
      FormBuilderTextField(
        name: items.name,
        decoration: InputDecoration(
            hintText: items.hint_text,
            labelText: "email",
            prefixIcon: Image.asset(items.icon_prefix, height: 20, width: 20),
            border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
            contentPadding: const EdgeInsets.all(10)),
        autovalidateMode: AutovalidateMode.onUserInteraction,
        validator: FormBuilderValidators.compose([
          FormBuilderValidators.required(errorText: "Hãy nhập email"),
          FormBuilderValidators.email()
        ]),
      ),
      const SizedBox(height: 12),
    ]);
  }

  Widget SubmitButton(BuildContext context) {
    return ElevatedButton(
        onPressed: () {
          _showDialog(context);
        },
        style: TextButton.styleFrom(
            minimumSize: const Size(180, 50),
            backgroundColor: Colors.green, // Màu nền
            padding: const EdgeInsets.symmetric(
                horizontal: 15, vertical: 10), // Khoảng cách giữa chữ và nút
            shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(30) // Đổ viền cho nút
                )),
        child: Row(children: [
          const Text("Thay đổi thông tin",
              style: TextStyle(fontSize: 20, color: Colors.white)),
          const SizedBox(width: 5),
          SizedBox(height: 24, child: Image.asset(AppIcons.icWhiteSubmit))
        ]));
  }

  // Widget SelectBirthday() {
  //   return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
  //     const Row(children: [
  //       SizedBox(width: 20),
  //       Text("Ngày sinh",
  //           style: TextStyle(
  //               fontSize: 16,
  //               color: Colors.black,
  //               fontStyle: FontStyle.italic,
  //               fontWeight: FontWeight.bold))
  //     ]),
  //     const SizedBox(height: 5),
  //     TextFormField(
  //         readOnly: true, // Đánh dấu ô nhập liệu là chỉ đọc
  //         controller: TextEditingController(
  //             text: DateFormat('dd/MM/yyyy')
  //                 .format(dtBirthday)), // Định dạng hiển thị
  //         decoration: InputDecoration(
  //             border:
  //                 OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
  //             hintText: 'Chọn ngày tháng',
  //             prefixIcon: IconButton(
  //                 icon: Image.asset(AppIcons.icCalendar),
  //                 onPressed: () async {
  //                   _selectDate(context);
  //                 }),
  //             contentPadding: const EdgeInsets.all(10)))
  //   ]);
  // }

  Widget ProfileHeader() {
    return Stack(children: [
      SizedBox(
        width: MediaQuery.of(context).size.width,
        height: MediaQuery.of(context).size.height * 0.21,
      ),
      Container(
          width: MediaQuery.of(context).size.width,
          height: MediaQuery.of(context).size.height * 0.16,
          decoration: BoxDecoration(
              border: Border.all(color: Colors.grey, width: 2),
              borderRadius: const BorderRadius.only(
                  bottomLeft: Radius.circular(15.0),
                  bottomRight: Radius.circular(15.0)),
              image: const DecorationImage(
                  image: AssetImage(AppImages.imgAppLogoBG),
                  fit: BoxFit.cover))),
      Positioned(
          left: 0,
          right: 0,
          bottom: 0,
          child: Center(
              child: Container(
                  width: MediaQuery.of(context).size.height * 0.15,
                  height: MediaQuery.of(context).size.height * 0.15,
                  decoration: BoxDecoration(
                      border: Border.all(color: Colors.white, width: 5),
                      shape: BoxShape.circle,
                      image: const DecorationImage(
                          image: AssetImage(AppImages.imgProfile128x128),
                          fit: BoxFit.cover))))),
    ]);
  }

  // Widget SelectGender() {
  //   return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
  //     const Row(children: [
  //       SizedBox(width: 20),
  //       Text("Giới tính",
  //           style: TextStyle(
  //               fontSize: 16,
  //               color: Colors.black,
  //               fontStyle: FontStyle.italic,
  //               fontWeight: FontWeight.bold))
  //     ]),
  //     const SizedBox(height: 5),
  //     CupertinoPicker(
  //         itemExtent: 50.0,
  //         scrollController: scrollController,
  //         onSelectedItemChanged: (int index) {
  //           setState(() {
  //             txtGender = listGender[index];
  //           });
  //         },
  //         children: listGender.map((String option) {
  //           return Center(
  //               child: Text(option, style: const TextStyle(fontSize: 20)));
  //         }).toList())
  //   ]);
  // }

  String formatDateString(String value) {
    if (value.length == 8) {
      return '${value.substring(0, 2)}/${value.substring(2, 4)}/${value.substring(4)}';
    }
    return value;
  }

  // Future<void> _selectDate(BuildContext context) async {
  //   final DateTime? picked = await showDatePicker(
  //       context: context,
  //       initialDate: dtBirthday,
  //       firstDate: DateTime(2000),
  //       lastDate: DateTime(2101));
  //   if (picked != null && picked != dtBirthday) {
  //     setState(() {
  //       dtBirthday = picked;
  //     });
  //   }
  // }

  Future<void> _showDialog(BuildContext context) async {
    return showDialog(
        context: context,
        builder: (BuildContext context) {
          return AlertDialog(
              title:
                  const Text('Xác nhận thay đổi', textAlign: TextAlign.center),
              content: const Text('Bạn đã chắc chắn với thông tin cập nhật?'),
              actions: <Widget>[
                Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      TextButton(
                          child: const Text('Không'),
                          onPressed: () {
                            context.router.pushNamed(Routes.home);
                          }),
                      TextButton(
                          child: const Text('Có'),
                          onPressed: () {
                            context.router.pushNamed(Routes.userprofile);
                          })
                    ])
              ]);
        });
  }

  Widget TurnBack() {
    return AppIconButton(
        onPressed: () {
          context.router.pop();
        },
        icon: Transform.scale(
            scale: 1.5, child: Image.asset(AppIcons.icBack_png, height: 55)));
  }

  @override
  void initState() {
    super.initState();
    controller.getCurrentUser(context);
    _formKey.currentState?.patchValue({
      'email': controller.currentUser.value.email,
    });
  }
}
